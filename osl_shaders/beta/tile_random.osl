float rand(float n){
    return sin(n) * 43758.5453123 - floor(sin(n) * 43758.5453123);
}

shader hShaderName(
    float tile_u = 4,
    float tile_v = 4,
    int seed = 0,
    int iterations = 10,
    float rotation = 0,
    output point Result = 0,
)
{
    point uv = point(u*tile_u, v*tile_v, 0);
    Result = uv;
    float t_mix = 0;
    point new_uv = point(uv[0], 1-uv[1], 0);
    for (int i = 0; i < iterations; i++)
    {
        if (rand(i) < 0.5){
            new_uv = point(1-uv[0], uv[1], 0);
        }
        else if (rand(i) > 0.5) {
            new_uv = point(uv[0], uv[1], 0);
        }
        t_mix = float(noise("cell", uv-i*5));
        t_mix = clamp((t_mix-0.95)/(0.96-0.95), 0, 1);
        Result = mix(Result, new_uv, t_mix);
    }
}
